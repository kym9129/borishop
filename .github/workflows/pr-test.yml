name: Run Test

on:
  pull_request:
    branches:
      - master

permissions:
  checks: write
  contents: read
  issues: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # 1.1 git source checkout
      - name: Checkout
        uses: actions/checkout@v3

      # 1.2 use JDK
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      # 1.3 cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # 1.4 cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      # 1.5 gradle permission change
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 1.6 test
      - name: Test with Gradle
        run: SPRING_PROFILES_ACTIVE=[test] ./gradlew test

      # 1.7 view test results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml

      # 1.8 remove Gradle Cache
      - name: Cleanup Gradle Cache
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties